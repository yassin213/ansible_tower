---
- block:
    - name: "Enumerate the list of updates from the {{ __pulp_pkg_repo_name }} repo"
      yum:
        list: updates
        disablerepo: "*"
        enablerepo:  "{{ __pulp_pkg_repo_name }}"
      register: updates

    - name: List packages to be upgraded
      debug:
        # We do not use json_query because it requires jmespath on the control
        # node. We should not introduce an addtl control node dependency
        # unless there is a very compelling reason.
        # msg: "{{ updates | json_query('results[*].name') }}"
        msg: "{{ updates.results | map(attribute='name')|list }}"

    - name: Upgrade all existing installed Pulp packages
      yum:
        name: "{{ updates.results | map(attribute='name')|list }}"
        state: latest # noqa 403
      notify:
        - Collect static content
        - Restart all Pulp services

  become: true
  when:
    - ansible_facts.os_family == "RedHat"
    - pulp_pkg_repo is not none
    - pulp_pkg_upgrade_all

- block:

    - name: "Install the Pulp undeclared {{ ansible_facts.pkg_mgr }} package dependencies"
      package:
        name: "{{ pulp_pkg_undeclared_deps }}"
        state: "{{ pulp_pkg_upgrade_all | ternary('latest','present') }}"
      notify:
        - Collect static content
        - Restart all Pulp services

    - name: "Install pulpcore via {{ ansible_facts.pkg_mgr }} packages"
      package:
        name: "{{ pulp_pkg_pulpcore_name }}"
        state: "{{ pulp_pkg_upgrade_all | ternary('latest','present') }}"
      notify:
        - Collect static content
        - Restart all Pulp services

    - name: "Install Pulp plugins via {{ ansible_facts.pkg_mgr }} packages"
      package:
        name: '{{ pulp_pkg_name_prefix }}{{ __pulp_common_package.key }}'
        state: "{{ pulp_pkg_upgrade_all | ternary('latest','present') }}"
      # We use pulp_install_plugins rather than pulp_install_plugins_normalized
      # so that users can specify package names with underscores if distros
      # require it.
      loop: '{{ pulp_install_plugins | dict2items }}'
      loop_control:
        loop_var: __pulp_common_package
      when:
        - __pulp_common_package.value.pkg_name is undefined
      notify:
        - Collect static content
        - Restart all Pulp services

    - name: "Install Pulp plugins (with overriden names) via {{ ansible_facts.pkg_mgr }}"
      package:
        name: '{{ __pulp_common_package.value.pkg_name }}'
        state: "{{ pulp_pkg_upgrade_all | ternary('latest','present') }}"
      loop: '{{ pulp_install_plugins | dict2items }}'
      loop_control:
        loop_var: __pulp_common_package
      when:
        - __pulp_common_package.value.pkg_name is defined
      notify:
        - Collect static content
        - Restart all Pulp services

    - name: "Install gunicorn via {{ ansible_facts.pkg_mgr }} packages"
      package:
        name: python3-gunicorn
        state: present

  become: true
...
